# Exomiser UI - Docker Compose Configuration
version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: ./compose/Dockerfile
      args:
        - EXOMISER_VERSION=14.1.0
    image: exomiser-ui:latest
    container_name: exomiser-ui
    volumes:
      # Development: mount source code for hot reload
      - ./app:/opt/app:ro
      # Persistent data volumes
      - ./instance:/opt/instance
      - /Volumes/Extreme/Exomiser/data:/opt/exomiser/data
      - ./ikdrc:/opt/exomiser/ikdrc # vcf, phenopacket, results
      # Optional: mount configuration
      - ./compose/application.properties:/opt/exomiser/application.properties:ro
    ports:
      - "${PORT:-8000}:8000"
    environment:
      # Flask configuration
      - FLASK_ENV=${FLASK_ENV:-development}
      - FLASK_DEBUG=${FLASK_DEBUG:-1}
      - SECRET_KEY=${SECRET_KEY:-dev-secret-change-in-production}
      - DATABASE_URL=sqlite:////opt/instance/app.db
      # Java/Exomiser configuration
      - JAVA_OPTS=-Xms2g -Xmx${MAX_MEMORY:-4g}
      - EXOMISER_DATA_DIR=/opt/exomiser/data
      - EXOMISER_RESULTS_DIR=/opt/exomiser/ikdrc/results
      # Production settings
      - PYTHONUNBUFFERED=1
      - GUNICORN_WORKERS=${GUNICORN_WORKERS:-2}
      - GUNICORN_THREADS=${GUNICORN_THREADS:-4}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - exomiser-network
    deploy:
      resources:
        limits:
          memory: 6g
          cpus: '2.0'
        reservations:
          memory: 1g
          cpus: '0.5'
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

networks:
  exomiser-network:
    driver: bridge
    name: exomiser-network
